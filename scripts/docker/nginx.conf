user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;  # 4x default (1024) para milhares de usuários
    use epoll;  # Linux high-performance
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations for high traffic
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 500M;  # Para uploads grandes
    client_body_buffer_size 128k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/atom+xml image/svg+xml;

    # FastCGI cache (opcional para cache de responses)
    fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=fastcgi_cache:10m max_size=100m inactive=60m;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    fastcgi_cache_valid 200 302 10m;
    fastcgi_cache_valid 404 1m;

    # Rate limiting (proteção DDoS)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=5r/m;

    # Upstream FastAPI (múltiplos workers)
    upstream fastapi_backend {
        # least_conn;  # Balanceamento por menor conexão
        ip_hash;  # Sticky sessions
        server api:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;  # Connection pooling
    }

    server {
        listen 80;
        server_name _;

        # Root para arquivos estáticos (montado como volume no docker-compose)
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Servir arquivos estáticos (Welcome, Auth, RAG Console, Admin)
        location / {
            try_files $uri $uri/ =404;
            
            # Cache estático
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Auth endpoints (rate limited)
        location /auth/ {
            limit_req zone=auth_limit burst=5 nodelay;
            
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API endpoints (rate limited)
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;  # 5min para processamento
            proxy_read_timeout 300s;
        }

        # V1 API endpoints (rate limited)
        location /v1/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Upload endpoint (special rate limit)
        location ~ ^/api/(rag|extraction)/(ingest|upload) {
            limit_req zone=upload_limit burst=3 nodelay;
            client_max_body_size 500M;
            client_body_timeout 300s;
            
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            proxy_request_buffering off;
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;  # 10min para upload
            proxy_read_timeout 600s;
        }

        # Health check (no rate limit, no auth)
        location /health {
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }

        # Metrics endpoint (no rate limit)
        location /metrics {
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

